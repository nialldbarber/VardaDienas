workflows:
  ios-testflight:
    name: Varda Dienas iOS TestFlight
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: Varda
    environment:
      groups:
        - varda
      ruby: 3.2.2
      node: v19.7.0
      xcode: latest
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.nialldbarber.vardadienas
    scripts:
      - name: Install npm dependencies
        script: npm install

      - name: Install CocoaPods and xcodeproj
        script: |
          gem uninstall cocoapods xcodeproj -a -x || true
          gem install xcodeproj -v 1.27.0
          gem install cocoapods -v 1.14.3 --conservative
          export PATH="$(ruby -e 'puts Gem.user_dir')/bin:$PATH"

      - name: Patch objectVersion to avoid Xcode 16 incompatibility
        script: |
          if grep -q "objectVersion = 70;" ios/*.xcodeproj/project.pbxproj; then
            sed -i '' 's/objectVersion = 70;/objectVersion = 60;/g' ios/*.xcodeproj/project.pbxproj
            echo "Patched objectVersion from 70 to 60"
          else
            echo "objectVersion is not 70, skipping patch"
          fi

      - name: Install CocoaPods dependencies
        script: |
          cd ios
          export PATH="$(ruby -e 'puts Gem.user_dir')/bin:$PATH"
          pod _1.14.3_ install

      - name: Debug code signing
        script: |
          echo "Available certificates:"
          security find-identity -v -p codesigning
          echo "Available provisioning profiles:"
          find ~/Library/MobileDevice/Provisioning\ Profiles -name "*.mobileprovision" -exec echo {} \; -exec security cms -D -i {} \; 2>/dev/null | grep -A 5 -B 5 "Name\|UUID\|TeamIdentifier"

      - name: Set up code signing
        script: xcode-project use-profiles --warn-only

      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios
          echo "Current build number from project:"
          agvtool what-version -terse || echo "No current version found"

          # Use a UTC timestamp to ensure a strictly increasing and unique build number across workflows
          BUILD_NUMBER=$(date -u +%Y%m%d%H%M%S)
          echo "Setting build number to $BUILD_NUMBER..."
          agvtool new-version -all $BUILD_NUMBER

          echo "Verifying build number was set:"
          agvtool what-version -terse

      - name: Build IPA
        script: |
          cd ios
          xcodebuild -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/VardaDienas.xcarchive \
            archive
          xcodebuild -exportArchive \
            -archivePath build/VardaDienas.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist exportOptions.plist \
            -allowProvisioningUpdates

    artifacts:
          - ios/build/ios/ipa/*.ipa  # Updated path
          - /tmp/xcodebuild_logs/*.log
          - /tmp/xcodebuild.log
          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      email:
        recipients:
          - nialldbarber@gmail.com
        notify:
          success: true
          failure: false
      app_store_connect:
        auth: integration
        submit_to_testflight: true

  ios-production:
    name: Varda Dienas iOS App Store
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: Varda
    environment:
      groups:
        - varda
      ruby: 3.2.2
      node: v19.7.0
      xcode: latest
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.nialldbarber.vardadienas
    scripts:
      - name: Install npm dependencies
        script: npm install

      - name: Install CocoaPods and xcodeproj
        script: |
          gem uninstall cocoapods xcodeproj -a -x || true
          gem install xcodeproj -v 1.27.0
          gem install cocoapods -v 1.14.3 --conservative
          export PATH="$(ruby -e 'puts Gem.user_dir')/bin:$PATH"

      - name: Patch objectVersion to avoid Xcode 16 incompatibility
        script: |
          if grep -q "objectVersion = 70;" ios/*.xcodeproj/project.pbxproj; then
            sed -i '' 's/objectVersion = 70;/objectVersion = 60;/g' ios/*.xcodeproj/project.pbxproj
            echo "Patched objectVersion from 70 to 60"
          else
            echo "objectVersion is not 70, skipping patch"
          fi

      - name: Install CocoaPods dependencies
        script: |
          cd ios
          export PATH="$(ruby -e 'puts Gem.user_dir')/bin:$PATH"
          pod _1.14.3_ install

      - name: Debug code signing
        script: |
          echo "Available certificates:"
          security find-identity -v -p codesigning
          echo "Available provisioning profiles:"
          find ~/Library/MobileDevice/Provisioning\ Profiles -name "*.mobileprovision" -exec echo {} \; -exec security cms -D -i {} \; 2>/dev/null | grep -A 5 -B 5 "Name\|UUID\|TeamIdentifier"

      - name: Set up code signing
        script: xcode-project use-profiles --warn-only

      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios
          echo "Current build number from project:"
          agvtool what-version -terse || echo "No current version found"

          # Use a UTC timestamp to ensure a strictly increasing and unique build number across workflows
          BUILD_NUMBER=$(date -u +%Y%m%d%H%M%S)
          echo "Setting build number to $BUILD_NUMBER..."
          agvtool new-version -all $BUILD_NUMBER

          echo "Verifying build number was set:"
          agvtool what-version -terse

      - name: Build IPA
        script: |
          cd ios
          xcodebuild -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/VardaDienas.xcarchive \
            archive
          xcodebuild -exportArchive \
            -archivePath build/VardaDienas.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist exportOptions.plist \
            -allowProvisioningUpdates

    artifacts:
          - ios/build/ios/ipa/*.ipa
          - /tmp/xcodebuild_logs/*.log
          - /tmp/xcodebuild.log
          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
          - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      email:
        recipients:
          - nialldbarber@gmail.com
        notify:
          success: true
          failure: false
      app_store_connect:
        auth: integration
        submit_to_testflight: false
        submit_to_app_store: true

    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: 'v*.*.*'
          include: true
